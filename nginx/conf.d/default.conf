server {
    listen 80 default_server;
    server_name _;

    # Enable access logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Default location - serve loading page for any unmatched requests
    location / {
        try_files $uri @loading;
    } # Loading page fallback
    location @loading {
        root /usr/share/nginx/html;
        add_header Content-Type text/html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        try_files /loading.html =500;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}

# Dynamic server blocks will be generated based on services.yaml
# This is a placeholder - in a real implementation, you would generate
# server blocks dynamically or use a more sophisticated approach

# Example server block for a configured domain:
# server {
#     listen 80;
#     server_name example.com;
#
#     access_log /var/log/nginx/access.log;
#     error_log /var/log/nginx/error.log;
#
#     location / {
#         # Try to proxy to the container
#         proxy_pass http://my_example_app:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#
#         # Connection settings
#         proxy_connect_timeout 5s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#
#         # If proxy fails, serve loading page
#         proxy_intercept_errors on;
#         error_page 502 503 504 @loading;
#     }
#
#     # Loading page fallback for this domain
#     location @loading {
#         root /usr/share/nginx/html;
#         try_files /loading.html =404;
#     }
# }
# Example WebSocket-enabled server block:
# server {
#     listen 80;
#     server_name ws.example.com;
#
#     access_log /var/log/nginx/access.log;
#     error_log /var/log/nginx/error.log;
#
#     location / {
#         proxy_pass http://my_ws_app:3000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#
#         # WebSocket support
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#
#         # Connection settings
#         proxy_connect_timeout 5s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#
#         # If proxy fails, serve loading page
#         proxy_intercept_errors on;
#         error_page 502 503 504 @loading;
#     }
#
#     # Loading page fallback for this domain
#     location @loading {
#         root /usr/share/nginx/html;
#         try_files /loading.html =404;
#     }
# }
